{"name":"PACXX","tagline":"Programming Accelerators with C++","body":"### Under Construction\r\nThis page is a placeholder. Once my research project is open-source all necessary information will be published here. In the meantime, have you ever wanted to write GPU code like this?\r\n\r\n```c++\r\nusing namespace std;\r\n\r\nint main(int argc, char* argv[]) {\r\n    size_t n = 1 << 24;\r\n    vector<int> a(n);\r\n    vector<int> b(n);\r\n    vector<int> c(n);\r\n\r\n    auto vadd = [](const vector<int> &a, const vector<int> &b, vector<int> &c) {\r\n       if (i >= a.size()) return;\r\n       c[i] = a[i] + b[i];\r\n    };\r\n\r\n    size_t threads = 128;\r\n    size_t blocks = (n + (threads * 2 - 1)) / (threads * 2);\r\n\r\n     auto vadd_gpu = kernel(vadd, {{blocks}, {threads}});\r\n     vadd_gpu(a, b, c);\r\n     return 0;\r\n}\r\n```\r\nHere is something to read:\r\n\r\n### Publications\r\n* M. Haidl, M. Steuwer, T. Humernbrum, and S. Gorlatch, \"Multi-Stage Programming for GPUs in Modern C++ using PACXX,\" _in Proceedings of General-Purpose GPU at PPoPP '16, GPGPU-9_. (to appear)\r\n\r\n* M. Haidl and S. Gorlatch, \"Programming GPUs with C++14 and Just-In-Time Compilation,\" _in Proceedings of the International Conference on Parallel Computing (ParCo) 2015_. (to appear)\r\n\r\n* M. Haidl and S. Gorlatch, \"[PACXX: Towards a Unified Programming Model for Programming Accelerators Using C++14](http://dl.acm.org/citation.cfm?id=2688363),\" _in Proceedings of LLVM Compiler Infrastructure in HPC at SC '14, LLVM-HPC 2014_, IEEE, 2014, pp. 1-11.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}